/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2021-09-26 04:49:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>index.jsp</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>Mini Project - 게임정보 페이지</h1>\r\n");
      out.write("	<ol>\r\n");
      out.write("		<li>데스티니2 게임정보 페이지 개요<!-- 개요 -->\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li>프로젝트 개요\r\n");
      out.write("					<ul>\r\n");
      out.write("						<li>회원가입으로 운영되는 금주의 리셋과 경이아이템 정보 공유사이트</li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li>기능개요<!-- 기능개요 -->\r\n");
      out.write("					<ol type=\"I\">\r\n");
      out.write("						<li>공통기능\r\n");
      out.write("							<ul type=\"circle\">\r\n");
      out.write("								<li>로그인</li>\r\n");
      out.write("								<li>로그아웃</li>\r\n");
      out.write("								<li>회원가입</li>\r\n");
      out.write("								<li>마이페이지</li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li>금주의 활동표시\r\n");
      out.write("							<ul type=\"circle\">\r\n");
      out.write("								<li>공통기능 : 활동 리스트 열람, 활동 상세보기</li>\r\n");
      out.write("								<li>관리자 : 활동 등록, 수정, 삭제</li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li>아이템 정보표시\r\n");
      out.write("							<ul type=\"circle\">\r\n");
      out.write("								<li>공통기능 : 아이템 목록 보기, 아이템 상세보기</li>\r\n");
      out.write("								<li>관리자 : 아이템정보 등록, 수정, 삭제</li>\r\n");
      out.write("								<li>유저 : 추천, 비추천</li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li>아이템 정보 댓글\r\n");
      out.write("							<ul type=\"circle\">\r\n");
      out.write("								<li>공통기능 : 댓글 목록보기\r\n");
      out.write("								<li>유저 : 댓글 추가, 수정, 삭제</li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</li>\r\n");
      out.write("					</ol>\r\n");
      out.write("				</li>\r\n");
      out.write("				<!-- 기능개요 끝 -->\r\n");
      out.write("				<li>요구사항 정의<!-- 요구사항 정의 -->\r\n");
      out.write("					<ol type=\"I\">\r\n");
      out.write("						<li>회원가입\r\n");
      out.write("							<ol type=\"i\">\r\n");
      out.write("								<li>아이디(필수, 중복검사, 영문,숫자,특문 허용 8~12자리) uId</li>\r\n");
      out.write("								<li>비밀번호(필수, 영문+숫자+특수문자 조합) uPw</li>\r\n");
      out.write("								<li>이름 uNm</li>\r\n");
      out.write("								<li>이메일 uEmail</li>\r\n");
      out.write("								<li>프로필사진 uImg</li>\r\n");
      out.write("								<li>권한 - 관리자(Y), 회원(N) 두가지. 가입 시 DEFAULT는 N, DB에서 컨트롤</li>\r\n");
      out.write("							</ol>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li>로그인\r\n");
      out.write("							<ol type=\"i\">\r\n");
      out.write("								<li>ID랑 PW 확인</li>\r\n");
      out.write("								<li>로그인 성공 시 - 메인화면으로 돌아감, 성공메세지 출력.</li>\r\n");
      out.write("								<li>로그인 실패시 로그인화면에서 로그인 실패 메세지 출력</li>\r\n");
      out.write("							</ol>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li>로그아웃\r\n");
      out.write("							<ol type=\"i\">\r\n");
      out.write("								<li>로그아웃 성공 시 - 메인화면으로 돌아감, 성공메세지 출력.</li>\r\n");
      out.write("								<li>로그아웃 실패시 에러화면 출력</li>\r\n");
      out.write("							</ol>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li>마이페이지\r\n");
      out.write("							<ol type=\"i\">\r\n");
      out.write("								<li>회원정보 수정 - 비밀번호, 이름, 프로필사진, 이메일 수정 가능</li>\r\n");
      out.write("								<li>작성한 댓글 보기</li>\r\n");
      out.write("								<li>회원탈퇴</li>\r\n");
      out.write("							</ol>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li>번지 소식\r\n");
      out.write("							<ol type=\"i\">\r\n");
      out.write("								<li>관리자만 등록 가능</li>\r\n");
      out.write("								<li>번지 홈페이지 내용 가져올 것</li>\r\n");
      out.write("								<li>등록된 내용물들은 가장 최근 내용 3개를 메인화면에서 표시</li>								\r\n");
      out.write("								<li>게시물번호 : 자동</li>\r\n");
      out.write("								<li>제목 : 입력</li>\r\n");
      out.write("								<li>내용 : 텍스트 에디터를 이용해서 작성.</li>\r\n");
      out.write("								<li>등록일</li>\r\n");
      out.write("							</ol>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li>번지 소식 - 활동 목록 포함사항\r\n");
      out.write("							<ol type=\"i\">\r\n");
      out.write("								<li>카테고리 : 공격전, 전장, 황혼전, 주간 시련의장, 엑소도전, 슬픔의 제단, 적용 모드, 드랍 전설, 적용 기간\r\n");
      out.write("								</li>\r\n");
      out.write("								<li>공격전\r\n");
      out.write("									<ul type=\"circle\">\r\n");
      out.write("										<li>적용 모드</li>\r\n");
      out.write("										<li>적용기간</li>\r\n");
      out.write("									</ul>\r\n");
      out.write("								</li>\r\n");
      out.write("								<li>전장\r\n");
      out.write("									<ul type=\"circle\">\r\n");
      out.write("										<li>적용 모드</li>\r\n");
      out.write("										<li>적용기간</li>\r\n");
      out.write("									</ul>\r\n");
      out.write("								</li>\r\n");
      out.write("								<li>황혼전\r\n");
      out.write("									<ul type=\"circle\">\r\n");
      out.write("										<li>출현 맵</li>\r\n");
      out.write("										<li>난이도</li>\r\n");
      out.write("										<li>적용 모드</li>\r\n");
      out.write("										<li>드랍 아이템</li>\r\n");
      out.write("										<li>적용기간</li>\r\n");
      out.write("									</ul>\r\n");
      out.write("								</li>\r\n");
      out.write("								<li>시련의 장 주간 플레이리스트\r\n");
      out.write("									<ul type=\"circle\">\r\n");
      out.write("										<li>적용 모드</li>\r\n");
      out.write("										<li>적용기간</li>\r\n");
      out.write("									</ul>\r\n");
      out.write("								</li>\r\n");
      out.write("								<li>엑소도전\r\n");
      out.write("									<ul type=\"circle\">\r\n");
      out.write("										<li>도전 유형 이름</li>\r\n");
      out.write("										<li>설명</li>\r\n");
      out.write("										<li>적용기간</li>\r\n");
      out.write("									</ul>\r\n");
      out.write("								</li>\r\n");
      out.write("								<li>슬픔의 제단\r\n");
      out.write("									<ul type=\"circle\">\r\n");
      out.write("										<li>드랍 아이템</li>\r\n");
      out.write("										<li>적용기간</li>\r\n");
      out.write("									</ul>\r\n");
      out.write("								</li>\r\n");
      out.write("							</ol>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li>이번 주 데스티니 소식<br>번지넷 press 페이지 include, 또는 소스 활용\r\n");
      out.write("						</li>\r\n");
      out.write("						<li>아이템 정보\r\n");
      out.write("							<ol type=\"i\">\r\n");
      out.write("								<li>아이템 이름, 스크린샷, 아이콘, 설명, 태그(등급, 분류, 유형), 특성아이콘, 특성이름,\r\n");
      out.write("									특성설명(1~4)</li>\r\n");
      out.write("								<li>등급 : 일반, 고급, 희귀, 전설, 경이</li>\r\n");
      out.write("								<li>분류 : 자동소총, 파동소총, 정찰소총, 융합소총, 선형융합소총, 추적소총,<br>\r\n");
      out.write("									핸드캐논, 보조무기, 전투 활, 산탄총, 저격총, 기관단총, 기관총, 유탄발사기, 로켓발사기, 검\r\n");
      out.write("								</li>\r\n");
      out.write("								<li>업로드 - 관리자만</li>\r\n");
      out.write("								<li>아이템 목록에서는 이름과 아이콘만</li>\r\n");
      out.write("								<li>아이템 상세보기에서는 세부정보 표시</li>\r\n");
      out.write("								<li>화면에 전체 아이템 목록</li>\r\n");
      out.write("								<li>아이콘 클릭하여 세부정보 진입</li>\r\n");
      out.write("								<li>로그인한 사람에 대해서 추천, 비추천과 입력 가능</li>\r\n");
      out.write("							</ol>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li>댓글 기능\r\n");
      out.write("							<ol type=\"i\">\r\n");
      out.write("								<li>댓글은 한줄로</li>\r\n");
      out.write("								<li>댓글 열람은 누구나 가능</li>\r\n");
      out.write("								<li>로그인한 회원만 댓글 추가 가능</li>\r\n");
      out.write("								<li>자기가 단 댓글만 삭제 가능</li>\r\n");
      out.write("							</ol>\r\n");
      out.write("						</li>\r\n");
      out.write("					</ol>\r\n");
      out.write("				</li>\r\n");
      out.write("				<!-- 요구사항 정의 끝 -->\r\n");
      out.write("			</ul>\r\n");
      out.write("			<hr>\r\n");
      out.write("		</li>\r\n");
      out.write("		<!-- 개요 끝 -->\r\n");
      out.write("		<li>가능하면 추가할 사항들<!-- 추가사항START  -->\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li>API를 연결해서 내 인벤토리 및 현재 착용 아이템 조회</li>\r\n");
      out.write("				<li>로그인 - 게임DB랑 연동</li>\r\n");
      out.write("				<li>현재 내 계정의 캐릭터 조회 - User.GetBungieNetUserById\r\n");
      out.write("					<ol>\r\n");
      out.write("						<li>현재 내 캐릭터의 인벤토리 아이템 조회</li>\r\n");
      out.write("						<li>현재 내 캐릭터가 장비한 아이템 조회</li>\r\n");
      out.write("						<li>인벤토리와 장비칸 간 아이템 이동</li>\r\n");
      out.write("						<li>아이템 이동은 아이템 아이콘 드래그를 통하여 이동함</li>\r\n");
      out.write("					</ol>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li>현재 내 계정 창고 조회\r\n");
      out.write("					<ul>\r\n");
      out.write("						<li>계정 창고에서 캐릭터 인벤토리로 아이템 이동</li>\r\n");
      out.write("						<li>계정 창고에서 캐릭터 아이템 장비</li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</li>\r\n");
      out.write("		<!-- 추가사항END  -->\r\n");
      out.write("	</ol>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
