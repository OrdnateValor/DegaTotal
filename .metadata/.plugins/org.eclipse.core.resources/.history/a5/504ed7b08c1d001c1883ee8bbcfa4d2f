package mini.controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import mini.dao.ItemDAO;
import mini.dao.MemberDAO;
import mini.dto.Item;
import mini.dto.Member;

/**
 * Servlet implementation class ItemController
 */
@WebServlet("*.do")
public class CommentController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	private HttpSession session;
	private ItemDAO idao;
	private MemberDAO mdao;
	private String url;
	private boolean result;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doPost(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8"); // 한글 처리
		response.setContentType("text/html; charset=UTF-8");

		session = request.getSession();
		String requestURI = request.getRequestURI();
		// System.out.println("requestURI:" + requestURI);
		String contextPath = request.getContextPath();
		String cmd = requestURI.substring(contextPath.length());
		idao = new ItemDAO();
		mdao = new MemberDAO();

		switch (cmd) {
		case "/itemList.do":
			itemList(request);
			break;
		case "/itemInfo.do":
			itemInfo(request);
			break;
		case "/itemAdd.do":
			itemAdd(request);
			break;
		case "/itemInsert.do":
			itemInsert(request);
			response.sendRedirect(url);
			return;
		case "/itemMod.do":
			itemMod(request);
			break;
		case "/itemUpdate.do":
			itemUpdate(request);
			response.sendRedirect(url);
			return;
		case "/itemDel.do":
			itemDel(request);
			response.sendRedirect(url);
			return;
		}

		RequestDispatcher rd = request.getRequestDispatcher(url);
		rd.forward(request, response);
	}

	private void itemInsert(HttpServletRequest request) {
		Item item = new Item();
		item.ItemInsert(request);
		result = idao.addItem(item);
		if (result != false) {
			session.setAttribute("msg", "아이템 등록 성공");
		} else {
			session.setAttribute("msg", "아이템 등록 실패");
		}
		url = "/itemList.do";
	}

	private void itemAdd(HttpServletRequest request) {// 작성폼으로
		String sid = (String) session.getAttribute("sid");
		boolean prop = false;
		if (sid != null) {
			// System.out.println("sid : " + sid);
			Member smem = mdao.getUserById(sid);
			prop = smem.isProperties(); // 관리자 권한 확인하기
		}
		if (!prop) { // 권한 확인
			request.setAttribute("msg", "권한이 없습니다.");
			url = "/itemList.do";
		} else { // 권한 있을 시 넘어감
			url = "/itemInfo/itemAdd.jsp";
		}
	}

	private void itemUpdate(HttpServletRequest request) {// 쿼리 실행 처리
		Item item = new Item(request);
		result = idao.updateItem(item);
		if (result != false) {// 성공 시
			session.setAttribute("msg", "아이템 정보 업데이트");
		} else {
			session.setAttribute("msg", "정보 업데이트 실패");
		}
		url = "/itemList.do";
	}

	private void itemMod(HttpServletRequest request) {// 수정 폼으로
		Item item = null;
		String sid = (String) session.getAttribute("sid");
		boolean prop = false;
		if (sid != null) {
			// System.out.println("sid : " + sid);
			Member smem = mdao.getUserById(sid);
			prop = smem.isProperties(); // 관리자 권한 확인하기
		}
		if (!prop) { // 권한 확인
			request.setAttribute("msg", "권한이 없습니다.");
			url = "/itemList.do";
		} else { // 권한 있을 시 넘어감
			item = idao.selectItem(request.getParameter("itemId"));
			request.setAttribute("item", item);
			url = "/itemInfo/itemMod.jsp?itemId=" + request.getParameter("itemId");
		}
	}

	private void itemDel(HttpServletRequest request) {// 삭제처리
		String itemId = null;
		String sid = (String) session.getAttribute("sid");
		boolean prop = false;
		if (sid != null) {
			// System.out.println("sid : " + sid);
			Member smem = mdao.getUserById(sid);
			prop = smem.isProperties(); // 관리자 권한 확인하기
		}
		System.out.println("sid : " + sid);
		System.out.println("prop : " + prop);
		if (!prop || sid == null) {
			request.setAttribute("msg", "권한이 없습니다.");
			url = "/itemList.do";
		} else {
			itemId = request.getParameter("itemId");
			System.out.println("itemId : " + request.getParameter("itemId"));
			result = idao.delItem(itemId);
			System.out.println("result : " + result);
			if (result != false) {// 실패하지 않았으면
				session.setAttribute("msg", "아이템 정보 삭제 성공");
				url = "/itemList.do";
			} else {
				session.setAttribute("msg", "아이템 정보 삭제 실패");
				url = "/itemList.do";
			}
		}
		System.out.println("msg : " + session.getAttribute("msg"));
		System.out.println("===================================");
	}

	private void itemInfo(HttpServletRequest request) {// 상세보기
		Item item = null;
		String itemId = request.getParameter("itemId");
		String sid = (String) session.getAttribute("sid");
		boolean prop = false;
		if (sid != null) {
			// System.out.println("sid : " + sid);
			Member smem = mdao.getUserById(sid);
			prop = smem.isProperties(); // 관리자 권한 확인하기
		}

		// 아이템 받아오기
		item = idao.selectItem(itemId);
		// 저장된 데이터 페이지 송부
		if (item != null) { // 정상적으로 아이템 확인
			if (prop) {
				request.setAttribute("item", item);
				url = "/itemInfo/itemDetails.jsp?admin=1";
			} else {
				request.setAttribute("item", item);
				url = "/itemInfo/itemDetails.jsp?";
			}
		} else {// 에러
			request.setAttribute("msg", "잘못된 아이템 정보입니다.");
			if (prop) {
				url = "/itemList.do?admin=1";
			} else {
				url = "/itemList.do";
			}
		}
	}

	private void itemList(HttpServletRequest request) {// 아이템 목록
		String sid = (String) session.getAttribute("sid");
		boolean prop = false;
		if (sid != null) {
			// System.out.println("sid : " + sid);
			Member smem = mdao.getUserById(sid);
			prop = smem.isProperties(); // 관리자 권한 확인하기
		}
		/*
		 * //디버깅용 코드 System.out.println("prop : " + prop); List<Item> iList =
		 * idao.selectItemList(); if(iList != null) {
		 * System.out.println("iList is not null"); }else {
		 * System.out.println("iList is null"); }
		 */

		request.setAttribute("itemList", idao.selectItemList()); // 아이템 리스트 가져오기
		if (prop) {
			url = "/itemInfo/itemList.jsp?admin=1";
		} else {
			url = "/itemInfo/itemList.jsp";
		}

	}
}
